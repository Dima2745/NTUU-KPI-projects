PROGRAM # program WORD { LIST_OPERATORS }
LIST_OPERATORS # OPERATOR | LIST
LIST # OPERATOR LIST_OPERATORS

LIST_OPERATORS # OPERATOR| LIST
LIST # OPERATOR LIST_OPERATORS
OPERATOR # a

Z # b M b
M # a
M # ( L
L # M a )

Z # program ID { }
ID # LETTER| ID1
ID1 # ID LETTER
LETTER # a| b| c


Z # program ID1 { }
ID1 # ID2
ID2 # LETTER| ID3
ID3 # ID2 LETTER
LETTER # a| b| c




--------------------------------------------------------------------------------------------------------------------------------------
Z = program id { }
--------------------------------------------------------------------------------------------------------------------------------------
EXPRESSION # PLUS
PLUS # PLUS + EXPRESSION1| EXPRESSION1| PLUS + ( EXPRESSION )
EXPRESSION1 # MINUS
MINUS # MINUS - EXPRESSION2| EXPRESSION2| MINUS - ( EXPRESSION )
EXPRESSION2 # MULTIPLICATION
MULTIPLICATION # MULTIPLICATION * EXPRESSION3| EXPRESSION3
EXPRESSION3 # DIVISION
DIVISION # DIVISION / EXPRESSION4| EXPRESSION4
EXPRESSION4 # POWER
POWER # POWER ^ EXPRESSION5| EXPRESSION5
EXPRESSION5 # ( EXPRESSION )| id| + ( EXPRESSION )| - ( EXPRESSION )| + id| - id| PLUS + id| MINUS - id
--------------------------------------------------------------------------------------------------------------------------------------
Z # program id { OPERATORS }| program id { }
OPERATORS # READ
READ # read ( LIST_ID ) ;
LIST_ID # LIST_ID1
LIST_ID1 # id| LIST_ID1 , id
--------------------------------------------------------------------------------------------------------------------------------------
E # DOD1| E + DOD1| E - DOD1| DOD * - DOD1
DOD # MNO| DOD * MNO| DOD / MNO
DOD1 # DOD
MNO # id| ( E )| - ( E )
--------------------------------------------------------------------------------------------------------------------------------------
OGOL # int LIST_ID| const LIST_ID
--------------------------------------------------------------------------------------------------------------------------------------
Z = program id { LIST_OPER1 }| program id { }
LIST_OPER # OPER1 ;| OPER1 ; LIST_OPER
LIST_OPER1 # LIST_OPER
OPER1 # OPER
OPER # READ| WRITE| OGOL| EQUAL
READ # read ( LIST_ID )
WRITE # write ( LIST_ID )
OGOL # int LIST_ID| float LIST_ID
EQUAL # id = E
E # DOD1| E + DOD1| E - DOD1
DOD # MNO| DOD * MNO| DOD / MNO
DOD1 # DOD
MNO # id| ( E )
LIST_ID # LIST_ID1
LIST_ID1 # id| LIST_ID1 , id



Z = program id { LIST_OPER1 }| program id { }
LIST_OPER # OPER1 ;| OPER1 ; LIST_OPER
LIST_OPER1 # LIST_OPER
OPER1 # OPER
OPER # READ| WRITE| OGOL| EQUAL
READ # read ( LIST_ID )
WRITE # write ( LIST_ID )
LIST_ID # LIST_ID1
OGOL # int LIST_ID| float LIST_ID
EQUAL # id = E1
E1 # E
E # DOD1| E + DOD1| E - DOD1
DOD # MNO| DOD * MNO| DOD / MNO
DOD1 # DOD
MNO # con| ( E )| ID1
LIST_ID1 # ID2| LIST_ID1 , id
ID2 # id
ID1 # id





/*/*//*/*/*/*/*/*/*/*/*/
Z = program id { LIST_OPER1 }| program id { }
LIST_OPER # OPER1 ;| OPER1 ; LIST_OPER
LIST_OPER1 # LIST_OPER
OPER1 # OPER
OPER # READ| WRITE| OGOL| EQUAL
READ # read ( LIST_ID )
WRITE # write ( LIST_ID )
LIST_ID # LIST_ID1
OGOL # int LIST_ID| float LIST_ID
EQUAL # id = E1
E1 # E
E # DOD1| E + DOD1| E - DOD1
DOD # MNO| DOD * MNO| DOD / MNO
DOD1 # DOD
MNO # con| ( E )| id
LIST_ID1 # id| LIST_ID1 , id
/*/*//*/*/*/*/*/*/*/*/*/